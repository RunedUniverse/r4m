<?xml version="1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="https://api.runeduniverse.net/runes4tools/r4m-pem"
	xmlns="https://api.runeduniverse.net/runes4tools/r4m-pem"
	elementFormDefault="qualified">
	<xs:element name="project-execution-model" type="Model" />
	<xs:complexType name="Model">
		<xs:all>
			<xs:element name="modelVersion" type="xs:string"
				default="1.0.0" />
			<xs:element name="executions">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="execution" type="Execution"
							minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>

	<xs:complexType name="Execution">
		<xs:all>
			<xs:element name="inherited" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the execution should be propagated to
						downstream projects.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="true" />
						<xs:enumeration value="false" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="restrictions"
				type="ExecutionRestrictions" minOccurs="0" />
			<xs:element name="triggers" type="ExecutionTriggers"
				minOccurs="0" />
			<xs:element name="lifecycles" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="lifecycle" type="Lifecycle"
							minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="source" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="override" />
					<xs:enumeration value="packaging" />
					<xs:enumeration value="plugin" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="ExecutionRestrictions">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="packaging-procedure" type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Used to select packaging flag in POM. Keep in
							mind the POM's packaging flag only indirectly defines the
							Artifacts Type.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:any namespace="##other">
					<xs:annotation>
						<xs:documentation>
							Other extensions may provide additional
							restrictions.
						</xs:documentation>
					</xs:annotation>
				</xs:any>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ExecutionTriggers">
		<xs:choice>
			<xs:element name="always" minOccurs="0" maxOccurs="1" />
			<xs:element name="never" minOccurs="0" maxOccurs="1" />
			<xs:sequence>
				<xs:element name="default" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Execute when explicitly specified or no other
							Execution got explicitly specified via maven '@execution-id'.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="on-call" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Execute when explicitly called by via maven
							'@execution-id'.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element name="active-profile" type="Profile">
						<xs:annotation>
							<xs:documentation>
								Trigger is successful when the Profile got
								explicitly mentioned by executing 'mvn -Pactive-profile'.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inactive-profile" type="Profile">
						<xs:annotation>
							<xs:documentation>
								Trigger is successful when the Profile was
								defined somewhere in the POM hierarchy and was not explicitly
								mentioned to maven.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="provided-profile" type="Profile">
						<xs:annotation>
							<xs:documentation>
								Trigger is successful when the Profile was
								defined somewhere in the POM hierarchy.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="missing-profile" type="Profile">
						<xs:annotation>
							<xs:documentation>
								Trigger is successful when the Profile was
								neither explicitly mentioned to maven nor defined somewhere in
								the POM hierarchy.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:any namespace="##other">
						<xs:annotation>
							<xs:documentation>
								Other extensions may provide additional
								triggers.
							</xs:documentation>
						</xs:annotation>
					</xs:any>
				</xs:choice>
			</xs:sequence>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="Profile">
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="Lifecycle">
		<xs:all>
			<xs:element name="phases" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="phase" type="Phase" minOccurs="0"
							maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="Phase">
		<xs:all>
			<xs:element name="goals" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="goal" type="Goal" minOccurs="0"
							maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="Goal">
		<xs:all>
			<xs:element name="groupId" type="xs:string" />
			<xs:element name="artifactId" type="xs:string" />
			<xs:element name="modes">
				<xs:complexType>
					<xs:sequence>
						<xs:choice minOccurs="1" maxOccurs="unbounded">
							<xs:element name="default" />
							<xs:element name="dev" />
							<xs:any namespace="##other" />
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="fork" type="Fork" minOccurs="0" />
		</xs:all>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="optional" use="optional"
			default="true">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="true" />
					<xs:enumeration value="false" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="Fork">
		<xs:all>
			<xs:element name="mode" type="xs:string" minOccurs="0"
				maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Mode under which the forked Executions will be
						executed.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="executions" type="TargetExecutions"
				minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Defined Executions will be inherited by all
						phases.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lifecycle" type="TragetLifecycle"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="phases" type="TragetPhases"
				minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Defined Phases will be executed in order of
						definition. These phases will override definitions
						phase-execution
						restrictions inside of lifecycle definition.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="excludedPhases"
				type="TargetExcludedPhases" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Defined Phases will be removed from Lifecycle
						definitions and Phase definitions. In case Executions are
						defined,
						the defined Executions will be removed from predefined
						Phases.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>

	<xs:complexType name="TragetLifecycle">
		<xs:all>
			<xs:element name="startPhase" type="xs:string"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Start-Phase at which to start executing.
						Start-Phases not defined in Lifecycle will be ignored!
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stopPhase" type="xs:string"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Stop-Phase at which to stop executing.
						Stop-Phases not defined in Lifecycle will be ignored!
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="TragetPhases">
		<xs:sequence>
			<xs:element name="phase" minOccurs="0"
				maxOccurs="unbounded">
				<xs:complexType>
					<xs:all>
						<xs:element name="executions" minOccurs="0"
							type="TargetExecutions">
							<xs:annotation>
								<xs:documentation>
									Defined Executions will only be activated in
									the Phase they are
									defined in.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:all>
					<xs:attribute name="id" type="xs:string"
						use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TargetExcludedPhases">
		<xs:sequence>
			<xs:element name="phase" minOccurs="0"
				maxOccurs="unbounded">
				<xs:complexType>
					<xs:all>
						<xs:element name="executions" minOccurs="0"
							type="TargetExecutions">
							<xs:annotation>
								<xs:documentation>
									Defined Executions will be removed from
									predefined Phases. Phases with
									no remaining active executions
									will be skipped.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:all>
					<xs:attribute name="id" type="xs:string"
						use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TargetExecutions">
		<xs:sequence>
			<xs:element name="execution" minOccurs="0"
				maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="id" type="xs:string"
						use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

</xs:schema>
